name: Redis Operator
on:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - edited
      - created

env:
  CR_USER: ${{ secrets.CR_USER }}
  CR_PAT: ${{ secrets.CR_PAT }}
  DH_USER: ${{ secrets.DOCKERHUB_USER }}
  DH_TOKEN: ${{ secrets.DOCKERHUB_PASS }}
  KUBECONFIG_B64: ${{ secrets.KUBECONFIG }}

jobs:
  tests-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.0'
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Go Modules
        run: |
          go mod download
      - name: Setup Operator SDK
        run: |
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/v1.4.2/operator-sdk_linux_amd64
          chmod +x operator-sdk_linux_amd64 && sudo mv operator-sdk_linux_amd64 /usr/local/bin/operator-sdk
      - name: Setup KubeBuilder
        run: |
          os=$(go env GOOS)
          arch=$(go env GOARCH)
          curl -L https://go.kubebuilder.io/dl/2.3.1/${os}/${arch} | tar -xz -C /tmp/
          sudo mv /tmp/kubebuilder_2.3.1_${os}_${arch} /usr/local/kubebuilder
          export PATH=$PATH:/usr/local/kubebuilder/bin

      - name: Setup kubectl
        run: |
          curl -sLO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" -o kubectl
          chmod +x kubectl
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/kubectl
          echo '${{ env.KUBECONFIG_B64 }}' | base64 -d > /tmp/kubeconfig
          echo "KUBECONFIG=/tmp/kubeconfig" >> $GITHUB_ENV

      - name: Run tests for Kubernetes
        run: |
          make test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker ghcr.io login
        run: echo '${{ env.CR_PAT }}' | docker login ghcr.io -u ${{ env.CR_USER }} --password-stdin

      - name: Docker login
        run: echo '${{ env.DH_TOKEN }}' | docker login -u ${{ env.DH_USER }} --password-stdin

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/containersolutions/redis-operator
          tags: |
            type=sha,format=long
            type=semver,pattern={{version}}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Prepare test
        run: |
          make IMG=sha-${{github.sha}} NAMESPACE=test-${{github.sha}} int-test

      - name: Wait for Initializing
        run: |
          ./tests/waitforstatus.sh test-${{github.sha}} "redis-cluster" Initializing 20

      - name: Wait for Ready
        run: |
          ./tests/waitforstatus.sh test-${{github.sha}} "redis-cluster" Ready 60

      - name: Scale up
        run: |
          kubectl patch rdcl -n test-${{github.sha}} redis-cluster -p '{"spec":{"replicas":2}}' --type=merge

      - name: Wait for ScalingUp
        run: |
          ./tests/waitforstatus.sh test-${{github.sha}} "redis-cluster" ScalingUp 30

      - name: Wait for Ready
        run: |
          ./tests/waitforstatus.sh test-${{github.sha}} "redis-cluster" Ready 240

      - name: Delete test manifests
        if: ${{ always() }}
        run: |
          make IMG=sha-${{github.sha}} NAMESPACE=test-${{github.sha}} int-test-clean
